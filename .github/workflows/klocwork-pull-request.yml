# Copyright (C) 2021 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: Klocwork pull request scan

permissions:
  # Grant read permissions to private container images.
  packages: read

on:
  pull_request:
    paths:
      - '**'
      - '!**.md'
      - '!**/.clang-format'
      - '!**/COPYING'
      - '!**/LICENSE'
      - '!.github/**'
      - '.github/workflows/klocwork-pull-request.yml'
      - '!.gitignore'
      - '!cmake/manifests/**'
      - '!container/**'
      - '!docs/**'
      - '!scripts/**'

jobs:
  build:
    runs-on:
      - self-hosted
      - linux
      - x64
      - container

    container:
      image: ghcr.io/intel/fpga-runtime-for-opencl/ubuntu-22.04-dev:main
      volumes:
        - /opt/klocwork:/opt/klocwork

    steps:
      - run: echo /opt/klocwork/latest/bin >> "$GITHUB_PATH"

      - name: create local Klocwork project
        run: |
          mkdir -p /home/build/parent
          kwcheck create --project-dir /home/build/parent/.kwlp --settings-dir /home/build/parent/.kwps

      - name: checkout base ref
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}

      - name: create build files of base ref
        run: |
          mkdir build
          cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: create build specification of base ref
        run: kwinject --output kwinject.out ninja -C build -v -k0

      - name: fully analyze build of base ref
        run: kwcheck run --build-spec kwinject.out -F scriptable --report /home/build/parent_issues.txt --project-dir /home/build/parent/.kwlp --settings-dir /home/build/parent/.kwps

      # Use non numeric sort because `comm` expects default sorting order
      - name: get parent issue ids
        run: awk -F ';' '{print $1}' /home/build/parent_issues.txt | sort > /home/build/parent_issues_ids.txt
      
      - name: copy parent klocwork project
        run: |
          mkdir -p /home/build/child
          cp -r /home/build/parent/.kwlp /home/build/parent/.kwps /home/build/child

      - name: checkout head ref
        uses: actions/checkout@v3

      - name: create build files of head ref
        run: |
          mkdir build
          cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: create build specification of head ref
        run: kwinject --output kwinject.out ninja -C build -v -k0

      - name: incrementally analyze build of head ref
        run: kwcheck run --build-spec kwinject.out -F scriptable --report /home/build/child_issues.txt --project-dir /home/build/child/.kwlp --settings-dir /home/build/child/.kwps

      # Klocwork incremental scans will suppress the issues that were fixed in head ref (while preserving their issue id)
      # Any new issue will have id will be larger than the max id in scan of base ref.
      # For example, if base ref scan produced issue ids 1-5, and in head ref issue 4 was resolved but also introduced a new issue
      # then the resulting issue ids for head ref scan will be 1,2,3,5,6.
      - name: get child issue ids
        run: awk -F ';' '{print $1}' /home/build/child_issues.txt | sort > /home/build/child_issues_ids.txt
      
      - name: list issues fixed in head ref
        run: |
          FIXED_ISSUE_ID=$(comm -13 /home/build/child_issues_ids.txt /home/build/parent_issues_ids.txt | paste -sd,)
          if [ -n "$FIXED_ISSUE_ID" ]
          then
            kwcheck list --id "$FIXED_ISSUE_ID" -F detailed --project-dir /home/build/parent/.kwlp --settings-dir /home/build/parent/.kwps
          fi

      - name: ensure no new issues have been found in head ref
        run: |
          NEW_ISSUE_ID=$(comm -13 /home/build/parent_issues_ids.txt /home/build/child_issues_ids.txt | paste -sd,)
          if [ -n "$NEW_ISSUE_ID" ]
          then
            kwcheck list --id "$NEW_ISSUE_ID" -F detailed --project-dir /home/build/child/.kwlp --settings-dir /home/build/child/.kwps
          fi
          test -z "$NEW_ISSUE_ID"
